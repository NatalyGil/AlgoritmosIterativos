//Ayala hurtado cesar, Gongora Gil Natalia y Valero Ospino Valeria
package Algoritmositerativos;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

public class Algoritmosactv2 {
    
    public static int sumPair(int[] v) {
        int result = 0;
        int n = v.length; // Obtener el tamaño del arreglo
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                if ((v[i] + v[j]) % 2 == 0) {
                    result++;
                }
            }
        }
        return result;
    }

    public static void main(String[] args) {
        // Crear un objeto Scanner para leer entradas del usuario
        Scanner sc = new Scanner(System.in);

        // Registrar el tiempo inicial
        long tiempoInicial = System.nanoTime();

        // Pedir al usuario que ingrese el tamaño del arreglo
        System.out.print("Ingrese el tamaño del arreglo: ");
        int n = sc.nextInt();

        // Declarar el arreglo y llenarlo con datos proporcionados por el usuario
        int[] v = new int[n];
        System.out.println("Ingrese los elementos del arreglo:");
        for (int i = 0; i < n; i++) {
            v[i] = (int) (Math.random() * 10 + 1); // = sc.nextInt(); //puedes usar Math.random() para llenar más rápido 
        }

        // Llamar al método sumPair
        int resultado = sumPair(v);

        // Mostrar el resultado
        System.out.println("Número de pares cuya suma es par: " + resultado);

        // Registrar el tiempo final
        long tiempoFinal = System.nanoTime();

        // Calcular el tiempo de ejecución
        long tiempoEjecucion = tiempoFinal - tiempoInicial;

        // Mostrar el tiempo de ejecución en nanosegundos
        System.out.println("Tiempo de ejecución en nanosegundos: " + tiempoEjecucion);

        // Convertir a milisegundos si es necesario
        double tiempoEjecucionMs = tiempoEjecucion / 1_000_000.0;
        System.out.println("Tiempo de ejecución en milisegundos: " + tiempoEjecucionMs);

        // Guardar los resultados en un archivo .txt
        try {
            File archivo = new File("archivo.txt");
            FileWriter datos = new FileWriter(archivo);
            
            datos.write("El tamaño del arreglo es: "+n +"\n");

            // Escribir valores del arreglo
            datos.write("Valores del arreglo: \n");
            for (int valor : v) {
                datos.write(valor + " \n");
            }
            datos.write("\n");

            // Escribir número de pares
            datos.write("Número de pares cuya suma es par: " + resultado + "\n");

            // Escribir el tiempo de ejecución en milisegundos y nanosegundos
            datos.write("Tiempo de CPU en milisegundos: " + tiempoEjecucionMs + "ms\n");
            datos.write("Tiempo de ejecución en nanosegundos: " + tiempoEjecucion + "\n");

            // Cerrar el archivo después de escribir
            datos.close();

        } catch (IOException e) {
            System.out.println("Ocurrió un error al escribir en el archivo.");
            e.printStackTrace();
        }

        // Cerrar el scanner
        sc.close();
    }
}
